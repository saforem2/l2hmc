#================================================================#
#                                                                #
#    To pass the arguments defined below to `gauge_model.py`:    #
#        python3 gauge_model.py @gauge_model_args.txt            #
#                                                                #
#================================================================#

--time_size 16                   
--space_size 16                  
--num_samples 16
--num_steps 3                
--eps 0.3
--annealing
--beta_init 2.                  
--beta_final 4.                 
--lr_init 0.0001                
--lr_decay_steps 1000            
--lr_decay_rate 0.95            
--train_steps 5000             
--save_steps 1000               
--print_steps 1               
--training_samples_steps 1000
--training_samples_length 500
--network_arch 'conv3D'
--metric 'cos_diff'
--aux_weight 1.
--std_weight 1.
--charge_weight 1.
--loss_scale 1.
--summaries
--eps_trainable
#--clip_grads
#--clip_val 10.
--log_dir 'conv3D_logs/lattice_1616/fourier_approx/'


#============================================================================================
#                    Description of command line arguments defined above                    #
#============================================================================================
#   time_size:                      temporal extent of lattice                              #
#   space_size:                     spatial extent of lattice                               #
#   num_samples:                    number of samples per batch                             #
#   num_steps:                      number of leapfrog steps in MD update                   #
#   eps:                            step size in leapfrog integrator                        #
#   annealing:                      continuously anneal beta analogous to temperature)      #
#   beta_init:                      initial value of beta used in annealing schedule        #
#   beta_final:                     final value of beta in annealing schedule               #
#   lr_init:                        initial value of learning rate                          #
#   lr_decay_steps:                 steps after which lr is decayed by lr_decay_rat  e      #
#   lr_decay_rate:                  factor by which lr is decayed                           #
#   train_steps:                    number of training steps to perform                     #
#   save_steps:                     when to save model checkpoint                           #
#   print_steps:                    how often to print information during train ing         #
#   training_samples_steps:         when to run sampler during training                     #
#   training_samples_length:        how long sampler is ran for during traini ng            #
#   network_arch:                   network architecture ('conv3D', 'conv2D' , 'generic')   #
#   metric:                         must be one of 'l1', 'l2', 'cos2', 'cos _diff'          # 
#   aux:                            include auxiliary variable in loss fun ction            #
#   aux_weight:                     factor multiplying aux. var contribution to loss fn     #
#   std_weight:                     factor multiplying std. var contribution to loss fn     #
#   charge_weight:                  factor multiplying charge. var contribution to loss fn  #
#   loss_scale:                     factor by which the loss is multiplie d                 #
#   plaq_loss:                      include top. charge difference in th e loss fn          #
#   summaries:                      create summary objects for tensorbo ard                 #
#   eps_trainable:                  allows the step size to be a train able paramet er      #
#============================================================================================
